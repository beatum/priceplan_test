# -*- coding: utf-8 -*-
from __future__ import unicode_literals

"""
Created on 17.04.17.
(c) Ivan Semernyakov <direct@beatum-group.ru>
"""

from django.core.management.base import BaseCommand
from project.apps.interpoint.models import Article


"""
1) Напишите view на django, которая в начале выполняет первую запись в бд.
Потом выполняет вторую и с вероятностью в 20% генерирует ошибку в конце
из-за чего вторая запись не должна быть сохранена.
"""


class Command(BaseCommand):
    help = "My shiny new management command."

    def handle(self, *args, **options):
        self.make_data()

    def make_data(self):
        """
        Известно, что:
        --------------
            Вероятность – это отношение возможности происшествия одного или
            нескольких конкретных событий к общему числу возможных
            результатов.

        Отсюда следует:
        ---------------
            Даже если вычислить общее число всех возможных результатов,
            определяющих невозможность внесения записи в базу данных (не
            учитывая природных явлений: отключение элетричества, форсмажор,
            человеческий фактор и пр.), что на мой взгляд очень
            затруднительно, т.к. их будет бесконечное множество, да и в силу
            того, что контекст (диапозон границ в рамках которого может
            возникнуть исключение/ошибка, заранее не определён), 'ТО' для
            решения задачи я попытаюсь искусственно создать диапозон
            возможных результатов, прпеятсвующих наступлению ожидаемого
            события, в виде фиксированного числа аргументов.

        Предположим, что:
        -----------------
            Модель имеет пять обязательных полей, в случае если все пять
            полей будут заполнены соответсвующими значения, то вероятность
            сохранения записи в базу будет равна 100%.

            Путём не сложных вычислений, определим:

            1) 100% = 5 заполненных полей
            2) 100% / 5 = 20% одно поле в процентах

            Итак: Досточно допустить ошибку в последнем поле т.е. оставить
            его пустым, для того, чтобы вызвать исключение с вероятностью в
            20% Ч.Т.Д.

            P.S. Логика "Огонь" :) Надеюсь я правильно понял интерпретировал
            задачу.

        План:
        ------
            1. Создадим объект с 5-ю заполненными полями и сохарним его в
            базу, тем самым решим 50% задачи
            2. Создадим объект с 4-мя заполненными и одним пустым полем,
            проинициализируем сохранение, в результате которого получим
            ожидаемый Exception, и тем самым закроем задачу полностью.
        """

        try:
            Article.objects.create(field1='value 1', field2='value 2',
                                   field3='value 3', field4='value 4',
                                   field5=1)
            print "Первый объект создан и записан в базу данных"
        except Article.DoesNotExist as e:
            print "Model doesn't exist.", e

        try:
            Article.objects.create(field1='value 1', field2='value 2',
                                   field3='value 3', field4='value 4')

            # тут я преднаременно уберу 5-ое поле, для того, чтобы
            # вызвать ошибку

        except Exception as e:
            print "Генерируем исключение для преднамеренной ошибки!", e
